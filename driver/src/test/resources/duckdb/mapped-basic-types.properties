# column=NativeType;JDBCType;precision;scale;signed;JavaType
c_blob=BLOB;2004;0;0;false;org.duckdb.DuckDBResultSet$DuckDBBlobResult
c_boolean=BOOLEAN;16;1;0;false;java.lang.Boolean
c_bit=BIT;2000;0;0;false;java.lang.String
c_tinyint=TINYINT;-6;3;0;false;java.lang.Byte
c_utinyint=UTINYINT;2000;0;0;false;java.lang.Short
c_smallint=SMALLINT;5;5;0;false;java.lang.Short
c_usmallint=USMALLINT;2000;0;0;false;java.lang.Integer
c_integer=INTEGER;4;10;0;false;java.lang.Integer
c_uinteger=UINTEGER;2000;0;0;false;java.lang.Long
c_bigint=BIGINT;-5;19;0;false;java.lang.Long
c_ubigint=UBIGINT;2000;0;0;false;java.math.BigInteger
c_hugeint=HUGEINT;2000;0;0;false;java.math.BigInteger
c_uhugeint=UHUGEINT;2000;0;0;false;java.math.BigInteger
c_real=FLOAT;6;12;0;false;java.lang.Float
c_double=DOUBLE;8;22;0;false;java.lang.Double
c_decimal=DECIMAL(18,3);3;18;3;false;java.math.BigDecimal
c_decimal18=DECIMAL(18,0);3;18;0;false;java.math.BigDecimal
c_decimal183=DECIMAL(18,3);3;18;3;false;java.math.BigDecimal
c_date=DATE;91;10;0;false;java.time.LocalDate
c_interval=INTERVAL;2000;0;0;false;java.lang.String
c_time=TIME;92;18;9;false;java.time.LocalTime
c_timestamp=TIMESTAMP;93;29;9;false;java.sql.Timestamp
c_timestamps=TIMESTAMP_S;93;29;9;false;java.sql.Timestamp
c_timestampms=TIMESTAMP_MS;93;29;9;false;java.sql.Timestamp
c_timestampns=TIMESTAMP_NS;93;29;9;false;java.sql.Timestamp
c_timestamptz=TIMESTAMP WITH TIME ZONE;2014;29;9;false;java.time.OffsetDateTime
c_uuid=UUID;2000;0;0;false;java.util.UUID
c_varchar=VARCHAR;12;0;0;false;java.lang.String
c_varchar1=VARCHAR;12;0;0;false;java.lang.String
c_varchar2=VARCHAR;12;0;0;false;java.lang.String
c_int_array=INTEGER[3];2000;0;0;false;java.lang.String
c_int_list=INTEGER[];2003;0;0;false;org.duckdb.DuckDBArray
c_map=MAP(INTEGER, VARCHAR);2000;0;0;false;java.util.HashMap
c_struct=STRUCT(i INTEGER, j VARCHAR);2000;0;0;false;org.duckdb.DuckDBStruct
c_union=UNION(num INTEGER, "text" VARCHAR);2000;0;0;false;java.lang.String
