name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
        default: "0.8.0"

permissions:
  contents: write

jobs:
  release:
    name: "Build and Publish Artifact"
    runs-on: "ubuntu-latest"

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install JDK and Maven
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: |
            8
            21
          cache: "maven"
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Setup Toolchain
        shell: bash
        run: |
          mkdir -p $HOME/.m2 \
          && cat << EOF > $HOME/.m2/toolchains.xml
          <?xml version="1.0" encoding="UTF8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>21</version>
              </provides>
              <configuration>
                <jdkHome>${{ env.JAVA_HOME }}</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF
      - name: Update Configuration
        run: |
          find . -type f -name "pom.xml" -exec sed -i -e 's|${revision}|${{ github.event.inputs.version }}|g' \
            -e 's|^\(    <version>\).*\(</version>\)$|\1${{ github.event.inputs.version }}\2|' \
            -e 's|${parent.groupId}|io.github.jdbcx|g' -e 's|${project.parent.groupId}|io.github.jdbcx|g' '{}' \;
          find . -type f -name "simplelogger.*" -exec rm -fv '{}' \;
      - name: Release Maven package
        run: mvn -q --batch-mode deploy -Prelease
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USER }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Create Pre-release on Github
        uses: "zhicwu/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ github.event.inputs.version }}"
          prerelease: true
          title: "Release v${{ github.event.inputs.version }}"
          files: |
            LICENSE
            NOTICE
            **/target/jdbcx*.jar
            **/target/*.tar.gz
