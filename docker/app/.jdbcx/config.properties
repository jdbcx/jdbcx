#
# Shared Options
#

# Directory for all necessary .jar files.
jdbcx.custom.classpath=/app/drivers
# Comma separated extension whitelist
#jdbcx.extension.whitelist=db,web
#jdbcx.tag=ANGLE_BRACKET


#
# Driver Options
#

# This is not required as long as prqlc can be found in PATH
#jdbcx.prql.cli.path=/usr/bin/prqlc
jdbcx.prql.compile.options=--hide-signature-comment,--no-format

# Start the bridge server on 'myserver' first, for example:
# docker run --rm -it -p8080:8080 -e SERVER_OPTS="-Djdbcx.server.url=http://myserver:8080/" jdbcx/jdbcx server
#jdbcx.server.url=http://myserver:8080/


#
# Server Options
#

# Enable server authentication. When set to 'true', only requests with a valid access token will be processed, preventing unauthorized access.
#jdbcx.server.auth=false

# Secret key for signing and verifying access tokens.
# Generate with: openssl rand -base64 66 | tr -d '\n'
#jdbcx.server.secret=HS512:QXk18EEgn9r2xf2NF6PXUf9L9kI7srS4L89lXJp9f+iVkp6ugZICjAu5iD4LOdFEyXHcXp/mnJ3K4wu85D77kV1w

# Use a DNS or IP address that is accessible externally
#jdbcx.server.url=http://server.dns.or.ip:8080/

#jdbcx.server.backlog=0
#jdbcx.server.threads=0

# Caches up to 100 access tokens when authentication is enabled
#server.user.limit=100
# Caches up to 10k queries
#server.request.limit=10000
# 10 seconds before removing submitted query from cache
#server.request.timeout=10000

# Prefer to throw error in server mode
#jdbcx.db.exec.error=throw

# Prefer to use the last result when there's multiple ones
# Change to 'lastUpdate' if the underlying JDBC driver does not support multi-results
#jdbcx.db.result=last
